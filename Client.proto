syntax = "proto3";
import "google/protobuf/empty.proto";

// Message representing a user
message User {
  string username = 1;
}

// Message representing a chat message
message Message {
  string content = 1;
}

// Message representing a chat identifier
message ChatId {
  string id = 1;
}

// Service for managing chat connections and messages
service ChatService {
  // Connects to an existing chat (group)
  rpc ConnectGChat (ChatId) returns (stream Message);

  // Starts listening to messages in a group chat
  // Creates the chat if it doesn't exist
  rpc SubscribeToGroupChat (ChatId) returns (stream Message);

  // Requests a list of active chats
  rpc DiscoverChats (google.protobuf.Empty) returns (stream ChatId);

  // Sends an insult message to another client (undefined behavior)
  rpc SendInsult (User) returns (google.protobuf.Empty);

  // Sends a message to a user
  rpc SendPrivateMessage (Message) returns (google.protobuf.Empty);

  // Recieves a private message
  rpc RecievePrivateMessage (google.protobuf.Empty) returns (google.protobuf.Empty);
}